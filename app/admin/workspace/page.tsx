"use client"

import { AdminPageTitle } from "@/components/admin/admin-page-title"
import { CardSection } from "@/components/admin/card-section"
import { Button } from "@/components/ui/button"
import { Checkbox } from "@/components/ui/checkbox"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Separator } from "@/components/ui/separator"
import { IconSettings } from "@tabler/icons-react"
import { useState } from "react"
import { toast } from "sonner"

export default function WorkspaceSettings() {
  // State for form fields
  const [autoScroll, setAutoScroll] = useState(true)
  const [overrideTemp, setOverrideTemp] = useState(false)
  const [anonymousUsers, setAnonymousUsers] = useState(false)
  const [agentSearch, setAgentSearch] = useState(true)

  // Chat retention settings
  const [chatRetention, setChatRetention] = useState("Infinite Retention")

  const handleSaveSettings = () => {
    // This would be replaced with an actual API call to save settings
    console.log({
      autoScroll,
      overrideTemp,
      anonymousUsers,
      agentSearch,
      chatRetention
    })

    toast.success("Workspace settings saved successfully")
  }

  const handleRetentionLimit = () => {
    // This would be an API call to set retention
    toast.success("Retention limit set")
  }

  const handleRetainAll = () => {
    // This would be an API call to keep all messages
    toast.success("Set to retain all messages")
  }

  return (
    <div className="max-w-4xl p-6">
      <AdminPageTitle
        icon={<IconSettings size={28} />}
        title="Workspace Settings"
      />

      <p className="text-muted-foreground mb-6">
        Manage general settings applicable to all users in the workspace.
      </p>

      <CardSection className="mb-6">
        <h2 className="mb-4 text-xl font-semibold">Workspace Settings</h2>
        <div className="space-y-4">
          <div className="flex items-start space-x-3">
            <Checkbox
              id="auto-scroll"
              checked={autoScroll}
              onCheckedChange={checked => setAutoScroll(checked === true)}
            />
            <div>
              <Label htmlFor="auto-scroll">Auto-scroll</Label>
              <p className="text-muted-foreground text-sm">
                If set, the chat window will automatically scroll to the bottom
                as new lines of text are generated by the AI model. This can be
                overridden by individual user settings.
              </p>
            </div>
          </div>

          <div className="flex items-start space-x-3">
            <Checkbox
              id="override-temp"
              checked={overrideTemp}
              onCheckedChange={checked => setOverrideTemp(checked === true)}
            />
            <div>
              <Label htmlFor="override-temp">
                Override default temperature
              </Label>
              <p className="text-muted-foreground text-sm">
                If set, users will be able to override the default temperature
                for each assistant.
              </p>
            </div>
          </div>

          <div className="flex items-start space-x-3">
            <Checkbox
              id="anonymous-users"
              checked={anonymousUsers}
              onCheckedChange={checked => setAnonymousUsers(checked === true)}
            />
            <div>
              <Label htmlFor="anonymous-users">Anonymous Users</Label>
              <p className="text-muted-foreground text-sm">
                If set, users will not be required to sign in to use Onyx.
              </p>
            </div>
          </div>

          <div className="flex items-start space-x-3">
            <Checkbox
              id="agent-search"
              checked={agentSearch}
              onCheckedChange={checked => setAgentSearch(checked === true)}
            />
            <div>
              <Label htmlFor="agent-search">Agent Search</Label>
              <p className="text-muted-foreground text-sm">
                If set, users will be able to use Agent Search.
              </p>
            </div>
          </div>

          <Button onClick={handleSaveSettings} className="mt-4">
            Save Settings
          </Button>
        </div>
      </CardSection>

      <CardSection>
        <h2 className="mb-4 text-xl font-semibold">Chat Settings</h2>
        <div className="space-y-4">
          <div>
            <Label>Chat Retention</Label>
            <p className="text-muted-foreground mb-2 text-sm">
              Enter the maximum number of days you would like Onyx to retain
              chat messages. Leaving this field empty will cause Onyx to never
              delete chat messages.
            </p>
            <div className="flex space-x-2">
              <Input
                value={chatRetention}
                onChange={e => setChatRetention(e.target.value)}
                placeholder="Infinite Retention"
              />
              <Button onClick={handleRetentionLimit}>
                Set Retention Limit
              </Button>
              <Button variant="outline" onClick={handleRetainAll}>
                Retain All
              </Button>
            </div>
          </div>
        </div>
      </CardSection>
    </div>
  )
}
